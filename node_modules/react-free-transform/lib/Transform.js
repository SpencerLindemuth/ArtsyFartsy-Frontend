'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _rotate = require('./events/rotate');

var _rotate2 = _interopRequireDefault(_rotate);

var _scale = require('./events/scale');

var _scale2 = _interopRequireDefault(_scale);

var _ScalePoint = require('./ScalePoint');

var _ScalePoint2 = _interopRequireDefault(_ScalePoint);

var _Rotator = require('./Rotator');

var _Rotator2 = _interopRequireDefault(_Rotator);

var _translate = require('./events/translate');

var _translate2 = _interopRequireDefault(_translate);

var _ElementStyler = require('./ElementStyler');

var _ElementStyler2 = _interopRequireDefault(_ElementStyler);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Transform = function (_React$Component) {
  _inherits(Transform, _React$Component);

  function Transform(props) {
    _classCallCheck(this, Transform);

    var _this = _possibleConstructorReturn(this, (Transform.__proto__ || Object.getPrototypeOf(Transform)).call(this, props));

    _this.handleTranslation = _this.handleTranslation.bind(_this);
    _this.handleScale = _this.handleScale.bind(_this);
    _this.handleRotation = _this.handleRotation.bind(_this);
    return _this;
  }

  _createClass(Transform, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          classPrefix = _props.classPrefix,
          x = _props.x,
          y = _props.y,
          scaleX = _props.scaleX,
          scaleY = _props.scaleY,
          width = _props.width,
          height = _props.height,
          angle = _props.angle,
          disableScale = _props.disableScale;

      var _elementStyler = (0, _ElementStyler2.default)({ x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height, angle: angle, disableScale: disableScale }),
          elementStyle = _elementStyler.element,
          controlsStyles = _elementStyler.controls;

      return _react2.default.createElement(
        'div',
        { className: classPrefix + '-transform', onMouseDown: this.handleTranslation },
        _react2.default.createElement(
          'div',
          { className: classPrefix + '-transform__content', style: elementStyle },
          children
        ),
        _react2.default.createElement(
          'div',
          { className: classPrefix + '-transform__controls', style: controlsStyles },
          _react2.default.createElement(_ScalePoint2.default, { position: 'tl', onMouseDown: function onMouseDown(event) {
              return _this2.handleScale('tl', event);
            }, classPrefix: classPrefix }),
          _react2.default.createElement(_ScalePoint2.default, { position: 'ml', onMouseDown: function onMouseDown(event) {
              return _this2.handleScale('ml', event);
            }, classPrefix: classPrefix }),
          _react2.default.createElement(_ScalePoint2.default, { position: 'tr', onMouseDown: function onMouseDown(event) {
              return _this2.handleScale('tr', event);
            }, classPrefix: classPrefix }),
          _react2.default.createElement(_ScalePoint2.default, { position: 'tm', onMouseDown: function onMouseDown(event) {
              return _this2.handleScale('tm', event);
            }, classPrefix: classPrefix }),
          _react2.default.createElement(_ScalePoint2.default, { position: 'mr', onMouseDown: function onMouseDown(event) {
              return _this2.handleScale('mr', event);
            }, classPrefix: classPrefix }),
          _react2.default.createElement(_ScalePoint2.default, { position: 'bl', onMouseDown: function onMouseDown(event) {
              return _this2.handleScale('bl', event);
            }, classPrefix: classPrefix }),
          _react2.default.createElement(_ScalePoint2.default, { position: 'bm', onMouseDown: function onMouseDown(event) {
              return _this2.handleScale('bm', event);
            }, classPrefix: classPrefix }),
          _react2.default.createElement(_ScalePoint2.default, { position: 'br', onMouseDown: function onMouseDown(event) {
              return _this2.handleScale('br', event);
            }, classPrefix: classPrefix }),
          _react2.default.createElement(_Rotator2.default, { onMouseDown: this.handleRotation, classPrefix: classPrefix })
        )
      );
    }
  }, {
    key: 'handleTranslation',
    value: function handleTranslation(event) {
      event.stopPropagation();

      var drag = (0, _translate2.default)({
        x: this.props.x,
        y: this.props.y,
        startX: event.pageX,
        startY: event.pageY
      }, this.props.onUpdate);

      var up = function up() {
        document.removeEventListener('mousemove', drag);
        document.removeEventListener('mouseup', up);
      };

      document.addEventListener('mousemove', drag);
      document.addEventListener('mouseup', up);
    }
  }, {
    key: 'handleScale',
    value: function handleScale(scaleType, event) {

      event.stopPropagation();

      event.preventDefault();

      var drag = (0, _scale2.default)(scaleType, {
        startX: event.pageX,
        startY: event.pageY,
        x: this.props.x,
        y: this.props.y,
        scaleX: this.props.scaleX,
        scaleY: this.props.scaleY,
        width: this.props.width,
        height: this.props.height,
        angle: this.props.angle,
        scaleLimit: this.props.scaleLimit,
        scaleFromCenter: event.altKey,
        aspectRatio: event.shiftKey
      }, this.props.onUpdate);

      var up = function up() {
        document.removeEventListener('mousemove', drag);
        document.removeEventListener('mouseup', up);
      };

      document.addEventListener("mousemove", drag);
      document.addEventListener("mouseup", up);
    }
  }, {
    key: 'handleRotation',
    value: function handleRotation(event) {
      event.stopPropagation();

      var drag = (0, _rotate2.default)({
        startX: event.pageX,
        startY: event.pageY,
        x: this.props.x,
        y: this.props.y,
        scaleX: this.props.scaleX,
        scaleY: this.props.scaleY,
        width: this.props.width,
        height: this.props.height,
        angle: this.props.angle,
        offsetX: this.props.offsetX,
        offsetY: this.props.offsetY
      }, this.props.onUpdate);

      var up = function up() {
        document.removeEventListener('mousemove', drag);
        document.removeEventListener('mouseup', up);
      };

      document.addEventListener("mousemove", drag);
      document.addEventListener("mouseup", up);
    }
  }]);

  return Transform;
}(_react2.default.Component);

exports.default = Transform;


Transform.defaultProps = {
  classPrefix: "tr",
  scaleLimit: 0.1,
  disableScale: false,
  offsetX: 0,
  offsetY: 0,
  onUpdate: function onUpdate() {}
};

Transform.propTypes = {
  classPrefix: _propTypes2.default.string,
  width: _propTypes2.default.number.isRequired,
  height: _propTypes2.default.number.isRequired,
  x: _propTypes2.default.number.isRequired,
  y: _propTypes2.default.number.isRequired,
  scaleX: _propTypes2.default.number.isRequired,
  scaleY: _propTypes2.default.number.isRequired,
  scaleLimit: _propTypes2.default.number.isRequired,
  angle: _propTypes2.default.number.isRequired,
  onUpdate: _propTypes2.default.func,
  children: _propTypes2.default.element,
  disableScale: _propTypes2.default.bool,
  offsetX: _propTypes2.default.number.isRequired,
  offsetY: _propTypes2.default.number.isRequired
};