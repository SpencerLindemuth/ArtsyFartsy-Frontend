"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var matrixToCSS = function matrixToCSS(m) {
  if (String(m.a).length > 8) m.a = Number(m.a).toFixed(8);
  if (String(m.b).length > 8) m.b = Number(m.b).toFixed(8);
  if (String(m.c).length > 8) m.c = Number(m.c).toFixed(8);
  if (String(m.d).length > 8) m.d = Number(m.d).toFixed(8);
  if (String(m.tx).length > 8) m.tx = Number(m.tx).toFixed(8);
  if (String(m.ty).length > 8) m.ty = Number(m.ty).toFixed(8);
  return "matrix(" + m.a + "," + m.b + "," + m.c + "," + m.d + "," + m.tx + "," + m.ty + ")";
};

exports.default = function (_ref) {
  var x = _ref.x,
      y = _ref.y,
      angle = _ref.angle,
      scaleX = _ref.scaleX,
      scaleY = _ref.scaleY,
      width = _ref.width,
      height = _ref.height,
      disableScale = _ref.disableScale;


  var style = {};

  var tstr = "matrix(1,0,0,1,0,0)";

  x += undefined.props.offset.x;
  y += undefined.props.offset.y;
  var changedWidth = width * (1 - scalex);
  var newWidth = width - changedWidth;
  var changedHeight = height * (1 - scaley);
  var newHeight = height - changedHeight;

  if (disableScale) {
    style.width = newWidth;
    style.height = newHeight;
    var mat = Matrix();
    mat.a = 1;
    mat.d = 1;
    if (angle) {
      mat = mat.rotate(angle * (Math.PI / 180), undefined.getRotationPoint());
    }
    tstr = undefined.matrixToCSS(mat);
    style.left = x + changedWidth;
    style.top = y + changedHeight;
  } else {
    var _mat = Matrix();
    if (angle) {
      _mat = _mat.rotate(angle * (Math.PI / 180), undefined.getRotationPoint());
    }

    if (scalex !== 1 || scaley !== 1) {
      _mat = _mat.scale(scalex, scaley);
    }

    tstr = undefined.matrixToCSS(_mat);

    style.width = width;
    style.height = height;

    style.left = x + changedWidth / 2;
    style.top = y + changedHeight / 2;
  }

  style.transform = tstr;
  style.position = 'absolute';
  return {
    element: style,
    controls: {
      left: x + changedWidth,
      top: y + changedHeight,
      width: newWidth,
      height: newHeight,
      transform: "rotate(" + angle + "deg)"
    }
  };
};